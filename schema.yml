openapi: 3.0.3
info:
  title: Lector de comprobantes - API
  version: 1.0.0
  description: Api para la actividad de practica profesionalizante
paths:
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /comprobantes/:
    get:
      operationId: comprobantes_list
      tags:
      - comprobantes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comprobante'
          description: ''
    post:
      operationId: comprobantes_create
      tags:
      - comprobantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comprobante'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comprobante'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comprobante'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comprobante'
          description: ''
  /comprobantes/{id}/:
    get:
      operationId: comprobantes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comprobantes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comprobante'
          description: ''
    put:
      operationId: comprobantes_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comprobantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comprobante'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comprobante'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comprobante'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comprobante'
          description: ''
    patch:
      operationId: comprobantes_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comprobantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComprobante'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComprobante'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComprobante'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comprobante'
          description: ''
    delete:
      operationId: comprobantes_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - comprobantes
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /items/:
    get:
      operationId: items_list
      tags:
      - items
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: items_create
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /items/{id}/:
    get:
      operationId: items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CategoriaEnum:
      enum:
      - Alimentos
      - Bebidas
      - Hogar
      - Cuidado Personal
      - Otros
      type: string
      description: |-
        * `Alimentos` - Alimentos
        * `Bebidas` - Bebidas
        * `Hogar` - Hogar
        * `Cuidado Personal` - Cuidado Personal
        * `Otros` - Otros
    Comprobante:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          readOnly: true
      required:
      - Items
      - created_at
      - id
      - nombre
      - user
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 255
        precio:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        categoria:
          $ref: '#/components/schemas/CategoriaEnum'
        comprobante:
          type: integer
      required:
      - categoria
      - comprobante
      - id
      - nombre
      - precio
    PatchedComprobante:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          readOnly: true
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 255
        precio:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        categoria:
          $ref: '#/components/schemas/CategoriaEnum'
        comprobante:
          type: integer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
